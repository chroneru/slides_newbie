scale_colour_gradientn(colours = terrain.colors(10)
)
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "black", high = "green") +
scale_fill_gradient(low = "black", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL)
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "black", high = "green") +
scale_fill_gradient(low = "black", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL)
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "black", high = "green") +
scale_fill_gradient(low = "#66cc66", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL)
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#66cc66", high = "#ccffcc") +
scale_fill_gradient(low = "#66cc66", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL)
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL)
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL,
legend = NULL
)
?labs
??legend
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL,
legend = NA
)
??legend
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none") +
geom_hline(yintercept = 0.8)
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none") +
geom_hline(yintercept = 0.8, size = 1)
result %>%
ggplot() +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none") +
geom_hline(yintercept = 0.8, size = 0.1)
result %>%
ggplot() +
geom_hline(yintercept = 0.8, size = 0.1) +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
result %>%
ggplot() +
geom_hline(yintercept = c(0.8,1), size = 0.1) +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
result %>%
ggplot() +
geom_hline(yintercept = c(0.8,1), size = 0.1) +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_y_continuous(breaks = seq(0, 1, by = 1)) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
result %>%
ggplot() +
geom_hline(yintercept = c(0.8,1), size = 0.1) +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
result <- as_tibble(result) %>%
mutate(
name = names(result$count),
count_density = count / sum(count)
)
result %>%
ggplot() +
geom_hline(yintercept = c(0.8,1), size = 0.1) +
geom_bar(aes(name, count_density, fill = density), stat = "identity") +
geom_line(aes(name, density, group ="1")) +
geom_point(aes(name, density, color = density), size = 5) +
scale_x_discrete(limits = result$name) +
scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
```{r pareto_graph, collapse = FALSE}
result %>%
ggplot() +
geom_hline(
yintercept = c(0.8,1),
size = 0.1
) +
geom_bar(
aes(name, count_density, fill = density),
stat = "identity"
) +
geom_line(aes(name, density, group ="1")) +
geom_point(
aes(name, density, color = density),
size = 5
) +
scale_x_discrete(limits = result$name) +
scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
ggsave("Image/pareto_graph.png")
ggsave("Image/newbie_workshop_image/pareto_graph.png")
?html_document
rmarkdown::render("newbie_workshop.Rmd", "html_document", "newbie_workshop_pages.html")
rmarkdown::render("newbie_workshop.Rmd", "html_document", "newbie_workshop_pages.html")
rmarkdown::render("newbie_workshop.Rmd", "html_document", "newbie_workshop_pages.html")
rmarkdown::render("newbie_workshop.Rmd", "html_document", "newbie_workshop_pages.html")
#options(prompt = "#> $ ")
#options(continue = "#> $ ") #行末継続子
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE
)
#TRUEでprompt表示
#knitr::opts_current$set(prompt=FALSE, eval = FALSE)
#rmarkdown::render("newbie_workshop.Rmd", "revealjs_presentation", "newbie_workshop.html")
#rmarkdown::render("newbie_workshop.Rmd", "html_document", "newbie_workshop_pages.html")
library(tidyverse)
result %>%
ggplot() +
geom_hline(
yintercept = c(0.7,0.9,1),
size = 0.1
) +
geom_bar(
aes(name, count_density, fill = density),
stat = "identity"
) +
geom_line(aes(name, density, group ="1")) +
geom_point(
aes(name, density, color = density),
size = 5
) +
scale_x_discrete(limits = result$name) +
scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
result <- as_tibble(result) %>%
mutate(
name = names(result$count),
count_density = count / sum(count)
)
prob_vec <- sample(1:5, size = 5)
vec1 <- sample(
1:5,
size = 10000,
replace = TRUE,
prob = prob_vec
)
replace_abcde <- function(vec1) {
num <- 1
for(moji in c("a", "b", "c", "d", "e")) {
vec1[vec1 == num] <- moji
num <- num + 1
}
assign("vec1", vec1, envir = parent.env(environment()))
}
replace_abcde(vec1)
result <- pareto_func(vec1)
pareto_func <- function(vec) {
res_count <- c("a" = NA, "b" = NA, "c" = NA, "d" = NA, "e" = NA)
for(moji in c("a", "b", "c", "d", "e")) {
res_count[moji] <- sum(vec == moji)
}
res_count <- sort(res_count, decreasing = TRUE)
res_pareto <- cumsum(res_count)
res_pareto <- res_pareto / res_pareto[5]
list("count" = res_count, "density" = res_pareto)
}
prob_vec <- sample(1:5, size = 5)
vec1 <- sample(
1:5,
size = 10000,
replace = TRUE,
prob = prob_vec
)
replace_abcde <- function(vec1) {
num <- 1
for(moji in c("a", "b", "c", "d", "e")) {
vec1[vec1 == num] <- moji
num <- num + 1
}
assign("vec1", vec1, envir = parent.env(environment()))
}
replace_abcde(vec1)
result <- pareto_func(vec1)
result
result <- as_tibble(result) %>%
mutate(
name = names(result$count),
count_density = count / sum(count)
)
result %>%
ggplot() +
geom_hline(
yintercept = c(0.7,0.9,1),
size = 0.1
) +
geom_bar(
aes(name, count_density, fill = density),
stat = "identity"
) +
geom_line(aes(name, density, group ="1")) +
geom_point(
aes(name, density, color = density),
size = 5
) +
scale_x_discrete(limits = result$name) +
scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
# ggsave("pareto_graph.png")
?geom_hline
result %>%
ggplot() +
geom_hline(
yintercept = c(0.7,0.9,1),
size = 0.1,
color = "#ff0000"
) +
geom_bar(
aes(name, count_density, fill = density),
stat = "identity"
) +
geom_line(aes(name, density, group ="1")) +
geom_point(
aes(name, density, color = density),
size = 5
) +
scale_x_discrete(limits = result$name) +
scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
ggsave("}")
system("ls")
ggsave("Image/newbie_workshop_image/pareto_graph.png")
result %>%
ggplot() +
geom_hline(
yintercept = c(0.7,0.9,1),
size = 0.2,
color = "#ff0000"
) +
geom_bar(
aes(name, count_density, fill = density),
stat = "identity"
) +
geom_line(aes(name, density, group ="1")) +
geom_point(
aes(name, density, color = density),
size = 5
) +
scale_x_discrete(limits = result$name) +
scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "#006600", high = "#ccffcc") +
scale_fill_gradient(low = "#006600", high = "#ccffcc") +
#  viridis::scale_fill_viridis(option="inferno") +
#  viridis::scale_color_viridis() +
coord_cartesian(ylim = c(0,1)) +
labs(
x = names(result$count),
y = NULL
) +
theme(legend.position = "none")
ggsave("Image/newbie_workshop_image/pareto_graph.png")
library(tidyverse)
library(tidyverse)
library(tidyverse)
rmarkdown::render("newbie_workshop.Rmd", "html_document", "newbie_workshop_pages.html")
rmarkdown::render("newbie_workshop.Rmd", "html_document", "newbie_workshop_pages.html")
runif(5)
rnorm(5)
?rnorm
rgamma(5)
-log(dgamma(1:4, shape = 1))
p <- (1:9)/10
pgamma(qgamma(p, shape = 2), shape = 2)
1 - 1/exp(qgamma(p, shape = 1))
# even for shape = 0.001 about half the mass is on numbers
# that cannot be represented accurately (and most of those as zero)
pgamma(.Machine$double.xmin, 0.001)
pgamma(5e-324, 0.001)  # on most machines 5e-324 is the smallest
# representable non-zero number
table(rgamma(1e4, 0.001) == 0)/1e4
rgamma(5,shape = 2,rate = 5)
?rbeta
rbeta(5,shape1 = 0.5, shape2 = 0.5)
plot(rbeta(20,shape1 = 0.5, shape2 = 0.5))
plot(rbeta(100,shape1 = 0.5, shape2 = 0.5))
plot(rbeta(1000,shape1 = 0.5, shape2 = 0.5))
rbeta(100,shape1 = 0.5, shape2 = 0.5)
rbeta(100,shape1 = 0, shape2 = 1)
rbeta(100,shape1 = 1, shape2 = 0)
